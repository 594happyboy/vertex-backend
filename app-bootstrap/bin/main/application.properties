# ============================================
# Vertex Backend 配置文件
# ============================================

# 应用配置
spring.application.name=vertex-backend
server.port=8080

# Tomcat 配置（处理大文件上传）
server.tomcat.max-swallow-size=-1

# ============================================
# 数据库配置（MySQL 统一数据库）
# ============================================
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/vertex_backend?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Shanghai&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=root123

# MyBatis Plus 配置
mybatis-plus.configuration.map-underscore-to-camel-case=true
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus.mapper-locations=classpath:mapper/**/*.xml
# 注意：本项目不使用 MyBatis-Plus 的 @TableLogic 自动逻辑删除功能
# 所有软删除逻辑都通过手动编写的 softDelete() / hardDelete() 方法明确管理

# ============================================
# Redis 配置
# ============================================
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.timeout=3000ms

# ============================================
# MinIO 配置
# ============================================
minio.endpoint=http://localhost:9000
minio.accessKey=admin
minio.secretKey=admin123
minio.bucketName=vertex-files

# ============================================
# JWT 配置（双Token模式 + 方案4：分布式锁）
# ============================================
jwt.secret=your-256-bit-secret-key-change-in-production-environment-vertex-backend
jwt.access-token-expiration=1800000
jwt.issuer=vertex-backend

# Token刷新配置（方案4：分布式锁）
jwt.refresh.lock-timeout=5s
jwt.refresh.token-cache-ttl=5s

# 说明：
# - AccessToken 有效期：30分钟（1800000ms）
# - RefreshToken 有效期：7天（在 RefreshTokenService 中配置）
# - RefreshToken 存储在 Redis 中，支持主动撤销
# - 分布式锁超时：5秒（防止锁永久占用）
# - Token缓存时间：5秒（用于并发请求共享token）

# ============================================
# 文件上传配置
# ============================================
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=100MB
file.max-size=104857600
file.allowed-types=md,jpg,jpeg,png,gif,pdf,doc,docx,xls,xlsx,ppt,pptx,txt,zip,rar,mp4,mp3

# ============================================
# Swagger 配置
# ============================================
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

# ============================================
# 日志配置
# ============================================
logging.level.root=INFO
logging.level.com.zzy=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n
